CREATE TABLE CHAPTER(
	ID INTEGER,
	Name VARCHAR(40),
	PRIMARY KEY(ID));

CREATE TABLE SUBCHAPTER(
	SubChapID INTEGER,
	ChapID INTEGER,
	Name VARCHAR(40),
	PRIMARY KEY(SubChapID,ChapID),
	FOREIGN KEY(ChapID) REFERENCES CHAPTER(ID));

CREATE TABLE CIRCUIT(
	ID INTEGER,
	ImagePath VARCHAR(100),
	BaseRes VARCHAR(500),
	BaseEnu VARCHAR(100),
	PRIMARY KEY(ID));

CREATE TABLE EXERCISE(
	ID INTEGER,
	CircuitID INTEGER,
	Type CHAR,
	CompName VARCHAR(10),
	CorrectSol FLOAT,
	WrongAns1 FLOAT,
	WrongAns2 FLOAT,
	WrongAns3 FLOAT,
	SpecificRes VARCHAR(500),
	SubChapID INTEGER,
	ChapID INTEGER,
	PRIMARY KEY(ID),
	FOREIGN KEY(CircuitID) REFERENCES CIRCUIT(ID),
	FOREIGN KEY(SubChapID) REFERENCES SUBCHAPTER(SubChapID),
	FOREIGN KEY(ChapID) REFERENCES SUBCHAPTER(ChapID));

delimiter //
CREATE PROCEDURE sp_CreateExercise(
	IN cid INTEGER,
	IN type CHAR,
	IN cn VARCHAR(10),
	IN cs FLOAT,
	IN wa1 FLOAT,	
	IN wa2 FLOAT,	
	IN wa3 FLOAT,	
	IN sr VARCHAR(500),
	OUT ret INTEGER)
BEGIN
	DECLARE nextId INTEGER;
	START TRANSACTION;
	SET @nextId = (SELECT ID 
					FROM EXERCISE 
					ORDER BY ID DESC 
					LIMIT 1);	

	SET @nextid = IF(@nextid=NULL,0,@nextid + 1);

	INSERT INTO Exercise(ID,CID,Type,CompName,CorrectSol,WrongAns1,WrongAns2,WrongAns3,SpecificRes) VALUES(@nextID,@cid,@type,@cn	,@cs,@wa1,@wa2,@wa3,@sr);
	COMMIT;

	SELECT @nextId;
END //

delimiter //
CREATE PROCEDURE sp_CreateCircuit( 
	IN ip VARCHAR(100), 
	IN br VARCHAR(500), 
	IN be VARCHAR(100),
	OUT ret INTEGER)
BEGIN
	DECLARE nextId INTEGER;
	START TRANSACTION;
	SET @nextId = (SELECT ID 
					FROM CIRCUIT 
					ORDER BY ID DESC
					LIMIT 1);	

	SET @nextid = IF(@nextid=NULL,0,@nextid + 1);
	
	INSERT INTO Circuit(ID,ImagePath,BaseRes,BaseEnu) VALUES(@nextID,@ip,@br,@be);
	COMMIT;

	SELECT @nextId;
END //

